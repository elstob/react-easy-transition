{"version":3,"sources":["../src/ReactEasyTransition.js"],"names":["ReactEasyTransition","state","visible","nextProps","setState","props","path","className","component","childDidLeave","bind","children","propTypes","string","isRequired","initialStyle","object","transition","finalStyle","leaveStyle"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;;;;AACA;;;;AACA;;;;AAEA;;;;;;IAEqBA,mB;;;;;;;;;;;;;;4OACnBC,K,GAAQ;AACNC,eAAS;AADH,K;;;;;8CAakBC,S,EAAW;AACnC,WAAKC,QAAL,CAAc;AACZF,iBAAU,KAAKG,KAAL,CAAWC,IAAX,KAAoBH,UAAUG,IAA9B,IAAuC,OAAO,KAAKD,KAAL,CAAWC,IAAlB,KAA2B;AADhE,OAAd;AAGD;;;oCAEe;AACd,WAAKF,QAAL,CAAc;AACZF,iBAAS;AADG,OAAd;AAGD;;;6BAEQ;AACP,aACE;AAAA;AAAA;AACE,0BAAe,MADjB;AAEE,qBAAW,KAAKG,KAAL,CAAWE,SAFxB;AAGE,qBAAW,KAAKF,KAAL,CAAWG,SAAX,IAAwB;AAHrC;AAKG,aAAKP,KAAL,CAAWC,OAAX,IACD;AAAA;AAAA,sCAAiB,KAAK,KAAKG,KAAL,CAAWC,IAAjC,EAAuC,eAAe,KAAKG,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAAtD,IAAyF,KAAKL,KAA9F;AACG,eAAKA,KAAL,CAAWM;AADd;AANF,OADF;AAYD;;;4BAnCMC,S,GAAY;AACjBN,QAAM,uBAAUO,MAAV,CAAiBC,UADN;AAEjBC,gBAAc,uBAAUC,MAAV,CAAiBF,UAFd;AAGjBG,cAAY,uBAAUJ,MAAV,CAAiBC,UAHZ;AAIjBI,cAAY,uBAAUF,MAAV,CAAiBF,UAJZ;AAKjBK,cAAY,uBAAUH,MALL;AAMjBT,aAAW,uBAAUM,MANJ;AAOjBL,aAAW,uBAAUK;AAPJ,C;qBAJAb,mB","file":"ReactEasyTransition.js","sourcesContent":["'use strict'\n\nimport React, {Component} from 'react'\nimport PropTypes from 'prop-types'\nimport ReactTransitionGroup from 'react-addons-transition-group'\n\nimport TransitionChild from './TransitionChild'\n\nexport default class ReactEasyTransition extends Component {\n  state = {\n    visible: true\n  };\n  static propTypes = {\n    path: PropTypes.string.isRequired,\n    initialStyle: PropTypes.object.isRequired,\n    transition: PropTypes.string.isRequired,\n    finalStyle: PropTypes.object.isRequired,\n    leaveStyle: PropTypes.object,\n    className: PropTypes.string,\n    component: PropTypes.string\n  };\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      visible: (this.props.path === nextProps.path || (typeof this.props.path === 'undefined'))\n    })\n  }\n\n  childDidLeave() {\n    this.setState({\n      visible: true\n    })\n  }\n\n  render() {\n    return (\n      <ReactTransitionGroup\n        transitionName=\"fade\"\n        className={this.props.className}\n        component={this.props.component || \"div\"}\n      >\n        {this.state.visible &&\n        <TransitionChild key={this.props.path} childDidLeave={this.childDidLeave.bind(this)} {...this.props}>\n          {this.props.children}\n        </TransitionChild>}\n      </ReactTransitionGroup>\n    )\n  }\n}"]}